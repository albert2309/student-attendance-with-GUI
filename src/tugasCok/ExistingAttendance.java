/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tugasCok;
//This class can be acessed in two ways:
//One is used to record the data for the first time through GUI so you don't need to create another class just to record session

import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.DefaultCellEditor;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JComboBox;
//Another way is just to get the data through getter.

/**
 *
 * @author Albert
 */
public class ExistingAttendance extends javax.swing.JFrame {

    enum Attendance {
        NO_INPUT, PRESENT, ABSENT, LATE
    };

    /**
     * Creates new form Session
     */
    public ExistingAttendance(String session, String lecturerID, String moduleCode, String moduleName, String intakeCode, String startTime, String endTime, String lectureDate, String studentList) {
        this.setVisible(true);
        initComponents();
        this.lecturerID = lecturerID;
        this.sessionID = session;
        this.moduleCode = moduleCode;
        this.moduleName = moduleName;
        this.intakeCode = intakeCode;
        this.startTime = startTime;
        this.endTime = endTime;
        this.lectureDate = lectureDate;
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        ModuleText.setText(moduleCode);
        ModuleNameText.setText(moduleName);
        IntakeText.setText(intakeCode);
        EndText.setText(endTime);
        StartText.setText(startTime);
        DateText.setText(lectureDate);
        //tinggal masukin row ke dalam table

        String[] splitted = studentList.split(",");
        String tempId = " ", tempFirst = " ", tempLast = " ", tempResult = " ";
        for (int x = 0; x < splitted.length; x++) {
            if (x % 4 == 0) {
                tempId = splitted[x];
            } else if (x % 4 == 1) {
                tempFirst = splitted[x];
            } else if (x % 4 == 2) {
                tempLast = splitted[x];
            } else if (x % 4 == 3) {
                tempResult = splitted[x];
                if (tempResult.compareTo("PRESENT") == 0) {
                    model.addRow(new Object[]{tempId, tempFirst, tempLast, Attendance.PRESENT});
                } else if (tempResult.compareTo("ABSENT") == 0) {
                    model.addRow(new Object[]{tempId, tempFirst, tempLast, Attendance.ABSENT});
                } else if (tempResult.compareTo("LATE") == 0) {
                    model.addRow(new Object[]{tempId, tempFirst, tempLast, Attendance.LATE});
                } else if (tempResult.compareTo("ABSENT_WITH_REASON") == 0) {
                    model.addRow(new Object[]{tempId, tempFirst, tempLast, "ABSENT_WITH_REASON"});
                }
            }
        }
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        ModuleText = new javax.swing.JLabel();
        ModuleNameText = new javax.swing.JLabel();
        IntakeText = new javax.swing.JLabel();
        EndText = new javax.swing.JLabel();
        StartText = new javax.swing.JLabel();
        DateText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Modify Attendance");

        jLabel2.setText("Module Code");

        jLabel3.setText("Module Name");

        jLabel4.setText("Intake Code");

        jLabel5.setText("Start Time");

        jLabel6.setText("End Time");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Lecture Date");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "First Name", "Last Name", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        JComboBox<Attendance> comboBox = new JComboBox<ExistingAttendance.Attendance>(Attendance.values());
        jTable1.getColumnModel().getColumn(3).setCellEditor(new DefaultCellEditor(comboBox));

        jButton1.setText("Modify");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        ModuleText.setText("InsertHere");

        ModuleNameText.setText("InputName");

        IntakeText.setText("InputCode");

        EndText.setText("EndCode");

        StartText.setText("StartCode");

        DateText.setText("DateCode");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ModuleText)
                            .addComponent(ModuleNameText)
                            .addComponent(IntakeText)
                            .addComponent(StartText)
                            .addComponent(EndText)
                            .addComponent(DateText)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(ModuleText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(ModuleNameText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(IntakeText))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(StartText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(EndText))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(DateText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ModifyAttendance();
    }//GEN-LAST:event_jButton1ActionPerformed
    public void ModifyAttendance() {
        try {
            FileReader inputFile = new FileReader(".\\src\\tugasCok\\sessionList.txt");
            Scanner in = new Scanner(inputFile);
            String currLine;
            Scanner lineTokenizer;
            final JPanel panel = new JPanel();

            while (in.hasNext()) {
                currLine = in.nextLine();
                lineTokenizer = new Scanner(currLine);
                lineTokenizer.useDelimiter(";");
            }
            String studentList = "";
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            boolean isMIssing = false;
            for (int rowCount = 0; rowCount < model.getRowCount(); rowCount++) {
                if (rowCount < model.getRowCount() && rowCount > 0) {
                    studentList += ",";
                }
                for (int colCount = 0; colCount < model.getColumnCount() && isMIssing == false; colCount++) {

                    if (model.getValueAt(rowCount, colCount).toString().compareTo("NO_INPUT") == 0) {
                        JOptionPane.showMessageDialog(panel, "Attendance list is not properly filled", "Error", JOptionPane.ERROR_MESSAGE);
                        isMIssing = true;
                        break;
                    } else {
                        studentList += model.getValueAt(rowCount, colCount).toString();
                    }
                    //Maybe add another delimiter after each line for easy read by machine.

                    if (colCount < 3) {
                        studentList += ",";
                    }
                }
            }
            in.close();
            if (isMIssing == false) {
                String filledDate = lectureDate;
                String filledStart = startTime;
                String filledEnd = endTime;
                //Format of save:Session #;lecturer ID;module code; module name;intake code;start time;end time;lecture date; Sessions
                String savedSession = sessionID + ";" + lecturerID + ";" + moduleCode + ";" + moduleName + ";" + intakeCode + ";";
                savedSession += filledStart + ";" + filledEnd + ";" + filledDate + ";" + studentList;
                List<String> sessionList = new ArrayList<String>();
                inputFile = new FileReader(".\\src\\tugasCok\\sessionList.txt");
                in = new Scanner(inputFile);
                String checkSession = "";
                while (in.hasNext()) {
                    currLine = in.nextLine();
                    lineTokenizer = new Scanner(currLine);
                    lineTokenizer.useDelimiter(";");
                    checkSession = lineTokenizer.next();
                    if (checkSession.compareTo(sessionID) == 0) {
                        sessionList.add(savedSession);
                    } else {
                        sessionList.add(currLine);
                    }
                }
                in.close();
                PrintWriter output = new PrintWriter(".\\src\\tugasCok\\SessionList.txt");
                currLine = "";
                for (int index = 0; index < sessionList.size(); index++) {
                    if (index > 0) {
                        output.append('\n');
                    }
                    output.append(sessionList.get(index));
                }

                output.close();
                JOptionPane.showMessageDialog(panel, "Session recorded");
                in.close();
            }

        } catch (IOException fileError) {
            System.out.println("FILE NOT FOUND!!");
            System.exit(0);
        }

    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setVisible(false);
        removeAll();
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExistingAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExistingAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExistingAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExistingAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new ModifyAttendance().setVisible(true);
            }
        });
    }
    private String moduleCode;
    private String moduleName;
    private String lecturerID;
    private String sessionID;
    private String startTime;
    private String endTime;
    private String intakeCode;
    private String lectureDate;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DateText;
    private javax.swing.JLabel EndText;
    private javax.swing.JLabel IntakeText;
    private javax.swing.JLabel ModuleNameText;
    private javax.swing.JLabel ModuleText;
    private javax.swing.JLabel StartText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
